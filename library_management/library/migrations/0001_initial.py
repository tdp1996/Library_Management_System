# Generated by Django 5.1.1 on 2024-09-23 02:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                ("BookID", models.AutoField(primary_key=True, serialize=False)),
                ("ISBN", models.CharField(max_length=20, unique=True)),
                ("Book_Title", models.CharField(max_length=100)),
                ("Book_Author", models.CharField(blank=True, max_length=50, null=True)),
                ("Year_Of_Publication", models.IntegerField(blank=True, null=True)),
                ("Publisher", models.CharField(blank=True, max_length=50, null=True)),
                ("Genre", models.CharField(blank=True, max_length=50, null=True)),
                ("Amount", models.IntegerField()),
                ("Available", models.IntegerField()),
                ("Image_URL_S", models.URLField(blank=True, max_length=255, null=True)),
                ("Image_URL_M", models.URLField(blank=True, max_length=255, null=True)),
                ("Image_URL_L", models.URLField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "Books",
            },
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("MemberID", models.AutoField(primary_key=True, serialize=False)),
                ("Member_Name", models.CharField(max_length=100)),
                ("Email", models.EmailField(max_length=254, unique=True)),
                ("Phone", models.CharField(max_length=15)),
                ("Member_Address", models.CharField(max_length=50)),
                ("JoinDate", models.DateField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_superuser", models.BooleanField(default=False)),
                ("password", models.CharField(max_length=128, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "Members",
            },
        ),
        migrations.CreateModel(
            name="Loan",
            fields=[
                ("LoanID", models.AutoField(primary_key=True, serialize=False)),
                ("LoanDate", models.DateField()),
                ("DueDate", models.DateField()),
                ("ReturnDate", models.DateField(blank=True, null=True)),
                ("Loan_Status", models.CharField(default="On Loan", max_length=20)),
                (
                    "Fine",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "BookID",
                    models.ForeignKey(
                        db_column="BookID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library.book",
                    ),
                ),
                (
                    "MemberID",
                    models.ForeignKey(
                        db_column="MemberID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Loans",
            },
        ),
    ]
